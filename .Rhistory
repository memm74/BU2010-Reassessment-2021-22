x
x <- sample(1:10,10, replace = TRUE)
x
sum(x)
sort(x)
mean(x)
median(x)
mode(x)
getmode(x)
6+4
6+4
3+5
apples <- 12
apples <- apples + 30
apples <- 8
apples <- apples + 30
3+4*5^2
apples
pears <- 12
apples + pears
total <- apples + pears
call_matrix <- matrix(c(weekly_morning_calls, weekly_afternoon_calls), byrow = TRUE, ncol = 7)
colnames(call_matrix) <- c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
rownames(call_matrix) <- c("AM", "PM")
daily_calls <- c(morning_calls, afternoon_calls)
call_matrix
matrix
call_matrix[1,2]
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
call_matrix <- matrix(c(weekly_morning_calls, weekly_afternoon_calls), byrow = TRUE, ncol = 7)
colnames(call_matrix) <- c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
rownames(call_matrix) <- c("AM", "PM")
#daily_calls <- c(morning_calls, afternoon_calls)
call_matrix
matrix
call_matrix[1,2]
call_matrix[,3]
call_matrix[,"Wed"]
call_matrix[,6:7]
weekend <- call_matrix[,6:7]
mean(weekend)
call_type <- c("complaint", "purchase", "query")
factor_call_type <- factor(call_type)
factor_call_type
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
weekly_calls <- weekly_morning_calls + weekly_afternoon_calls
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
weekly_calls <- weekly_morning_calls + weekly_afternoon_calls
plot(weekly_calls)
plot(weekly_calls, type = "l")
plot(weekly_morning_calls, weekly_afternoon_calls, pch = 15, col = c("red", "blue"))
plot(c(weekly_morning_calls, weekly_afternoon_calls), pch = 15, col = c("red", "blue"))
plot(weekly_calls, type = "l")
plot(c(weekly_morning_calls, weekly_afternoon_calls), pch = 15, col = c("red", "blue"))
plot(c(weekly_morning_calls, weekly_afternoon_calls), col = c("red", "blue"))
plot(weekly_morning_calls,type="l",col="red")
lines(weekly_afternoon_calls,type="l",col="green")
plot(weekly_morning_calls,type="l",col="red")
lines(weekly_afternoon_calls,type="l",col="blue")
plot(weekly_morning_calls,y=25type="l",col="red")
plot(weekly_morning_calls,y=25,type="l",col="red")
plot(weekly_morning_calls,type="l",col="red")
plot(weekly_morning_calls,ylim=c(0,25),type="l",col="red")
lines(weekly_afternoon_calls,type="l",col="blue")
plot(weekly_morning_calls,ylim=c(10,25),type="l",col="red")
lines(weekly_afternoon_calls,type="l",col="blue")
mydates <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dates <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
data.frame(date, dividend)
apple_dividend <- data.frame(date, dividend)
apple_dividend
?head
?str
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
apple_dividend <- data.frame(date, dividend)
apple_dividend
apple_dividend[2:4,]
apple_dividend[,2]
apple_dividend[,, drop = FALSE]
apple_dividend[,2, drop = FALSE]
apple$dividend
apple_dividend$dividend
apple_dividend
subset(apple_dividend, date > 2021-07-01)
subset(apple_dividend, date < 2021-07-01)
subset(apple_dividend, date > as.Date(2021-07-01))
subset(apple_dividend, date > as.Date("2021-07-01"))
apple_dividend$company <- "apple"
apple_dividend
apple_dividend$company <- NULL
apple_dividend
weekly_morning_calls <- c(12,13,11,14,14,19,17)
weekly_afternoon_calls <- c(15,16,14,13,14,24,21)
weekly_calls <- weekly_morning_calls + weekly_afternoon_calls
plot(weekly_calls)
plot(weekly_calls, type="l")
?plot()
plot(weekly_calls)
plot(weekly_calls, type="l")
plot(c(weekly_morning_calls,weekly_afternoon_calls), col = c("red","black"))
plot(weekly_morning_calls, type="l", col="red")
lines(weekly_afternoon_calls, type = "l", col="black")
plot(weekly_afternoon_calls)
plot(weekly_morning_calls, type="l", col="red", ylim = c(0,25))
lines(weekly_afternoon_calls, type = "l", col="black")
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
apple_dividend <- data.frame(date, dividend)
apple_dividend
head(apple_dividend)
tail(apple_dividend)
str(apple_dividend)
?head()
apple_dividend
apple_dividend[2:4,]
2:4
2:9
apple_dividend[,2]
apple_dividend$dividend
apple_dividend[,2]
apple_dividend[,2, drop = FALSE]
#subsetting
subset(apple_dividend, date > as.Date("2021-07-01"))
#subsetting
subset(apple_dividend, date < as.Date("2021-07-01"))
head(apple_dividend)
apple_dividend
apple_dividend$company <- "apple"
apple_dividend
apple_dividend$company <- NULL
apple_dividend
apple_dividend
apple_dividend[1,1]
apple_dividend[1,]
apple_dividend[,1]
apple_dividend[,2]
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
dividends_by_date <- data.frame(date, dividend)
company_name <- "Apple Inc."
stocks <- list(company_name, dividends_by_date)
stocks
stocks[1]
stocks[[1]]
stocks$company_name
stocks
names(stocks) <- c("name", "overview")
stocks
stocks$name
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
dividends_by_date <- data.frame(date, dividend)
dividends_by_date$stock <- "apple"
dividends_by_date
stock <- c("apple","apple","apple","apple","apple","volkswagen","volkswagen","volkswagen")
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29", "2021-07-23", "2020-10-01", "2019-05-15"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205, 0.5641, 0.5636, 0.5355)
stock <- c("apple","apple","apple","apple","apple","volkswagen","volkswagen","volkswagen")
dividends_by_date <- data.frame(date, dividend, stock)
dividends_by_date
?split
groups <- dividends_by_date$stock
split(dividends_by_date, groups)
split(dividends_by_date, dividends_by_date$stock)
my_stocks <- list(company_name, dividends_by_date, stock)
groups <- dividends_by_date$stock
my_stocks
split(my_stocks, my_stocks$stock)
dividends_by_date
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205)
dividends_by_date <- data.frame(date, dividend)
dividends_by_date
company_name <- "Apple Inc."
stocks <- list(company_name, dividends_by_date)
stocks
stocks[1]
stocks[[1]]
stocks[2]
stocks[[2]]
stocks
name(stocks) <- c("Name","Overview")
names(stocks) <- c("Name","Overview")
stocks
names(stocks) <- c("name","overview")
stocks
stocks$name
sotcks$overview
stocks$overview
date <- as.Date(c("2021-10-28", "2021-07-27", "2021-04-28", "2021-01-27", "2020-10-29", "2021-07-23", "2020-10-01", "2019-05-15"))
dividend <- c(0.22, 0.22, 0.22, 0.205, 0.205, 0.5641, 0.5636, 0.5355)
stock <- c("apple","apple","apple","apple","apple","volkswagen","volkswagen","volkswagen")
dividends_by_date <- data.frame(date, dividend, stock)
dividends_by_date
groups <- dividends_by_date$stock
groups
split(dividends_by_date, groups)
modules <- (c("BU2010", "xxx"))
modules <- c("BU2010", "xxx")
book_cost <-c(39.09, 45.59)
names(book_costs) <- modules
book_costs <-c(39.09, 45.59)
names(book_costs) <- modules
book_costs
urlfile<-'https://raw.githubusercontent.com/memm74/height-data-2021-22/main/height-week5v.csv'
dsin<-read.csv(urlfile)
address<-'https://raw.githubusercontent.com/memm74/height-data-2021-22/main/height-week5v.csv'
height<-read.csv(address)
height
address<-'https://raw.githubusercontent.com/memm74/height-data-2021-22/main/height-week5v.csv'
height<-read_csv(address)
library(readr)
height<-read_csv(address)
height
densit <- ggplot(height)
library(ggplot2)
height_density <- ggplot(height)
height_density <- ggplot(height) + geom_density()
height_density <- ggplot(height, aes(x=height)) + geom_density()
plot <- ggplot(height, aes(x=height)) + geom_density()
plot
plot <- ggplot(height, aes(x=height)) + geom_boxplot()
plot
plot <- ggplot(height, aes(x=height)) + geom_violin()
plot
plot <- ggplot(height, aes(x=height, y=1)) + geom_violin()
plot
address <-'https://raw.githubusercontent.com/memm74/height-data-2021-22/main/height-week5v_gender.csv'
library(readr)
height<-read_csv(address)
height
plot <- ggplot(height, aes(x=height)) + geom_density()
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density()
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.4)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.4) + xlim(150,190)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.4) + xlim(145,190)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) +
geom_density(alpha=0.4) +
xlim(145,190)
plot
address <-'https://raw.githubusercontent.com/memm74/height-data-2021-22/main/height-week5v_gender.csv'
library(readr)
height<-read_csv(address)
height
library(ggplot2)
plot <- ggplot(height, aes(x=height)) + geom_density()
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density()
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.4)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.8)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.1)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.2)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) + geom_density(alpha=0.7)
plot
plot <- ggplot(height, aes(x=height, fill=gender)) +
geom_density(alpha=0.7) +
xlim(145,190)
plot
plot <- ggplot(height, aes(x=height)) + geom_boxplot()
plot
plot <- ggplot(height, aes(x=height, y=gender)) + geom_boxplot()
plot
plot <- ggplot(height, aes(y=height, x=gender)) + geom_boxplot()
plot
plot <- ggplot(height, aes(y=height, x=gender)) +
geom_boxplot() +
ylim(0,190)
plot
plot <- ggplot(height, aes(y=height, x=gender)) + geom_violin()
plot
plot <- ggplot(height, aes(y=height, x=gender)) +
geom_violin() +
geom_boxplot()
plot
plot <- ggplot(height, aes(y=height, x=gender)) +
geom_violin() +
geom_boxplot(width=0.1)
plot
plot <- ggplot(height, aes(y=height, x=gender)) +
geom_violin() +
geom_dotplot(binaxis = 'y', stackdir = 'center')
plot
library(ggplot)
economics
library(ggplot2)
economics
setwd("E:/OneDrive - Office 365/BU2010/R code")
setwd("E:/OneDrive - Office 365/BU2010/R code")
# Load the packages you need
library(readxl)
library(ggplot2)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
sme
plot <- ggplot(sme, aes(x = ladder, y = computers)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90,vjust = 0.5))+
scale_x_discrete(labels= c( "1(no e-business)", "2(e-mail)", "3(website)", "4(e-commerce)", "5(e-business)", "6(transformed organisation)" )) +
ylim(0,70)
plot
# Load the packages you need
library(readxl)
library(ggplot2)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
plot <- ggplot(sme, aes(x=computers, y=ladder)) +
geom_boxplot() +
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation")) +
ylim(0,400)
plot
plot
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
plot <- ggplot(sme, aes(x=computers, y=ladder)) +
geom_boxplot() +
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation")) +
ylim(0,400)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
plot <- ggplot(sme, aes(x=computers, y=ladder)) +
geom_boxplot() +
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation")) +
ylim(0,400)
plot
# Load the packages you need
library(readxl)
library(ggplot2)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
spss <- read_excel("sme_answers.xlsx")
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
sme <- read_excel("sme_answers.xlsx")
sme
ggplot(sme, aes(x=ladder, y=computers)) +
geom_boxplot() +
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation", "N/A")) +
ylim(0,20)
# Load the packages you need
library(readxl)
Library(ggplot2)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
ggplot(sme,aes(x=turnover, y=employees))+geom_boxplot()+ scale_x_discewte(labels=c("<£0.5M" , "£0.5M-£1M” ， “1£-£4.5M”
# Save the image for use in a publication. It will be printed with a width of 18cm in a publication that is printed with 300 dpi. Choose suitable values when saving the image.
ggsave（“employees_V_turnover.png" , plot, width=5, units="cm"
# Load the packages you need
library(readxl)
Library(ggplot2)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
ggplot(sme,aes(x=turnover, y=employees))+geom_boxplot()+ scale_x_discewte(labels=c("<£0.5M" , "£0.5M-£1M" ， "1£-£4.5M"
# Load the packages you need
library("readxl")
library("ggplot2")
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
plot <- ggplot(sme, aes(x =ladder, y =computers)) +
geom_boxplot()+
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation")) +
ylim(0,30) + ggtitle("BoxPlot of E-Adoption Ladder In UK Online Businesses") + ylab("Amount of Computers") + xlab("Types Of Ladders")
plot
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
plot <- ggplot(sme, aes(x=computers, y=ladder)) +
geom_boxplot() +
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation")) +
ylim(0,400)
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
plot <- ggplot(sme, aes(x=computers, y=ladder)) +
geom_boxplot() +
scale_x_discrete(labels= c("e-mail", "website", "e-commerce", "e-business", "transformed organisation")) +
ylim(0,400)
plot
# Load the packages you need
library(readxl)
Library(ggplot2)
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
# Read/import the spreadsheet that comes with the repo. It contains the data you will work with.
sme <- read_excel("sme_answers.xlsx")
sme
# The spreadsheet contains two columns I want you to work with: computers and ladder.
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
# The spreadsheet contains two columns I want you to work with: computers and ladder.
## Each row represents a company.
## The computer column represents how many computers these companies have in their business.
## The ladder column represents where the companies are on the e-adoption ladder. The markdown file contains a picture that shows how this is coded.
## Visualise the data in a meaningful way and label it nicely.
ggplot(sme,aes(x=turnover, y=employees))+geom_boxplot()+ scale_x_discewte(labels=c("<£0.5M" , "£0.5M-£1M" ， "1£-£4.5M"））
setwd("E:/OneDrive - Office 365/BU2010/2021-22/GitHub/BU2010-Reassessment-2021-22") #Lenovo
library(rvest)
tpa <- read_html("The Pen Addict (Podcast) - Stationery Wiki.html")
library(rvest)
install.packages(rvest)
install.packages('rvest')
library(rvest)
tpa <- read_html("The Pen Addict (Podcast) - Stationery Wiki.html")
episode <- tpa %>% html_nodes(".smwtype_num") %>% html_text()
title <- tpa %>% html_nodes(".smwtype_txt") %>% html_text()
price
title
date <- tpa %>% html_nodes(".smwtype_dat") %>% html_text()
length <- tpa %>% html_nodes(".smwtext") %>% html_text()
data <- data.frame(episode, title, date, length)
data
library(stringr)
length <- str_remove_all(length, " min")
data <- data.frame(episode, title, date, length)
data
length
length <- str_remove_all(length, " min")
length <- str_remove_all(length, "min")
length
length <- str_remove_all(length, " ")
length
length <- str_remove_all(length, "\w")
length
length <- str_remove_all(length, " ")
length
str_trim(length)
length
length <- str_trim(length)
length
data <- data.frame(episode, title, date, length)
data
save(data, file="data.Rda")
